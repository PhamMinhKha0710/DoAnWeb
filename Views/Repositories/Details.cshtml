@model DoAnWeb.Models.Repository

@{
    ViewData["Title"] = Model.RepositoryName;
}

<div class="container">
    <div class="row mb-4">
        <div class="col">
            <nav aria-label="breadcrumb">
                <ol class="breadcrumb">
                    <li class="breadcrumb-item"><a asp-controller="Home" asp-action="Index">Home</a></li>
                    <li class="breadcrumb-item"><a asp-action="Index">Repositories</a></li>
                    <li class="breadcrumb-item active" aria-current="page">@Model.RepositoryName</li>
                </ol>
            </nav>
        </div>
    </div>

    <div class="row">
        <div class="col-md-12">
            <div class="card mb-4">
                <div class="card-header d-flex justify-content-between align-items-center">
                    <h1 class="card-title mb-0">@Model.RepositoryName</h1>
                    @if (User.FindFirst(System.Security.Claims.ClaimTypes.NameIdentifier)?.Value == Model.OwnerId.ToString())
                    {
                        <div>
                            <a asp-action="Edit" asp-route-id="@Model.RepositoryId" class="btn btn-outline-primary btn-sm">Edit</a>
                            <a asp-action="Delete" asp-route-id="@Model.RepositoryId" class="btn btn-outline-danger btn-sm">Delete</a>
                        </div>
                    }
                </div>
                <div class="card-body">
                    <div class="d-flex justify-content-between mb-3">
                        <div>
                            <span class="badge bg-secondary">@Model.Visibility</span>
                        </div>
                        <div>
                            <small class="text-muted">Created on @Model.CreatedDate?.ToString("MMM dd, yyyy")</small>
                            @if (Model.UpdatedDate != Model.CreatedDate)
                            {
                                <small class="text-muted"> | Updated on @Model.UpdatedDate?.ToString("MMM dd, yyyy")</small>
                            }
                        </div>
                    </div>

                    <div class="repository-description mb-4">
                        @if (string.IsNullOrEmpty(Model.Description))
                        {
                            <p class="text-muted">No description provided.</p>
                        }
                        else
                        {
                            <p>@Model.Description</p>
                        }
                    </div>

                    <div class="card bg-light">
                        <div class="card-body">
                            <div class="d-flex">
                                <div class="flex-shrink-0">
                                    <img src="@(string.IsNullOrEmpty(Model.Owner?.AvatarUrl) ? "/images/default-avatar.png" : Model.Owner.AvatarUrl)" 
                                         alt="@Model.Owner?.DisplayName" class="rounded-circle" width="50" height="50">
                                </div>
                                <div class="flex-grow-1 ms-3">
                                    <h5 class="mt-0">@Model.Owner?.DisplayName</h5>
                                    <p class="mb-0">@Model.Owner?.Bio</p>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="card-footer">
                    <div class="d-flex justify-content-between">
                        <div>
                            <a asp-action="Files" asp-route-id="@Model.RepositoryId" class="btn btn-primary">View Files</a>
                            <a asp-action="Commits" asp-route-id="@Model.RepositoryId" class="btn btn-secondary">View Commits</a>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
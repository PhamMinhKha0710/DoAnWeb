@model DoAnWeb.ViewModels.QuestionViewModel

@{
    ViewData["Title"] = "Ask a Question";
}

<!-- Main container for the question creation page -->
<div class="container">
    <!-- Breadcrumb navigation for better user orientation -->
    <div class="row mb-4">
        <div class="col">
            <nav aria-label="breadcrumb">
                <ol class="breadcrumb">
                    <li class="breadcrumb-item"><a asp-controller="Home" asp-action="Index" class="text-decoration-none">Home</a></li>
                    <li class="breadcrumb-item"><a asp-action="Index" class="text-decoration-none">Questions</a></li>
                    <li class="breadcrumb-item active" aria-current="page">Ask a Question</li>
                </ol>
            </nav>
        </div>
    </div>

    <div class="row">
        <!-- Main content area (8 columns on medium screens and up) -->
        <div class="col-md-8">
            <div class="card create-question-card">
                <div class="card-header bg-transparent py-3">
                    <h1 class="card-title fs-4 fw-bold mb-0">Ask a Question</h1>
                </div>
                <div class="card-body">
                    <!-- Question creation form with file upload support -->
                    <form asp-action="Create" method="post" enctype="multipart/form-data" id="question-form">
                        <div asp-validation-summary="ModelOnly" class="text-danger"></div>

                        <!-- Question title input field -->
                        <div class="mb-4">
                            <label asp-for="Title" class="form-label fw-medium">Title</label>
                            <input asp-for="Title" class="form-control form-control-lg" placeholder="What's your question? Be specific." />
                            <span asp-validation-for="Title" class="text-danger"></span>
                            <!-- Helpful guidance for users -->
                            <div class="form-text">
                                <i class="bi bi-info-circle me-1"></i> Be specific and imagine you're asking a question to another person.
                            </div>
                        </div>

                        <!-- Question body with Markdown editor -->
                        <div class="mb-4">
                            <label asp-for="Body" class="form-label fw-medium">Body</label>
                            <!-- Custom Markdown editor container -->
                            <div class="markdown-editor-container border rounded">
                                <textarea asp-for="Body" class="form-control border-0 markdown-editor" rows="12" placeholder="Include all the information someone would need to answer your question"></textarea>
                            </div>
                            <span asp-validation-for="Body" class="text-danger"></span>
                            <!-- Markdown support information -->
                            <div class="form-text">
                                <i class="bi bi-markdown me-1"></i> Supports Markdown formatting. You can also paste screenshots directly into the editor.
                            </div>
                        </div>

                        <!-- Tags input with icon (now optional) -->
                        <div class="mb-4">
                            <label asp-for="Tags" class="form-label fw-medium">Tags (Optional)</label>
                            <div class="input-group">
                                <span class="input-group-text bg-light border-end-0">
                                    <i class="bi bi-tags"></i>
                                </span>
                                <input asp-for="Tags" class="form-control border-start-0" placeholder="e.g. javascript, react, node.js (comma separated)" />
                            </div>
                            <span asp-validation-for="Tags" class="text-danger"></span>
                            <!-- Tag guidance -->
                            <div class="form-text">
                                <i class="bi bi-info-circle me-1"></i> Add up to 5 tags to describe what your question is about. Use comma to separate tags.
                            </div>
                        </div>

                        <!-- File upload section with image preview -->
                        <div class="mb-4">
                            <label asp-for="Attachments" class="form-label fw-medium">Attachments (Optional)</label>
                            <input type="file" asp-for="Attachments" class="form-control" multiple id="file-upload" />
                            <div class="form-text">
                                <i class="bi bi-paperclip me-1"></i> Supported formats: PDF, DOC, DOCX, TXT, ZIP, RAR, JPG, JPEG, PNG, GIF, BMP, WEBP (Max 10MB per file)
                            </div>
                            <div class="form-text mt-1">
                                <i class="bi bi-info-circle me-1"></i> You can post your question without any attachments. Add files only if they help illustrate your question.
                            </div>
                            
                            <!-- Image preview container -->
                            <div id="image-preview-container" class="mt-3 row g-2">
                                <!-- Preview images will be inserted here by JavaScript -->
                            </div>
                        </div>

                        <!-- Form action buttons -->
                        <div class="d-grid gap-2 d-md-flex justify-content-md-end mt-4">
                            <a asp-action="Index" class="btn btn-outline-secondary">
                                <i class="bi bi-x-lg me-1"></i> Cancel
                            </a>
                            <button type="submit" class="btn btn-primary btn-lg" id="submit-button">
                                <i class="bi bi-send me-1"></i> Post Your Question
                            </button>
                        </div>
                    </form>
                </div>
            </div>
        </div>
        
        <!-- Sidebar with helpful information (4 columns) -->
        <div class="col-md-4">
            <!-- Tips card with guidance on asking good questions -->
            <div class="card mb-4 tips-card">
                <div class="card-header bg-transparent py-3">
                    <h5 class="mb-0 fw-bold">How to Ask</h5>
                </div>
                <div class="card-body">
                    <!-- Tip 1: Search first -->
                    <div class="tip-item mb-3">
                        <div class="d-flex">
                            <div class="tip-icon me-2 text-primary">
                                <i class="bi bi-search"></i>
                            </div>
                            <div>
                                <h6 class="fw-bold mb-1">Search first</h6>
                                <p class="text-muted small mb-0">Check if your question has been asked before.</p>
                            </div>
                        </div>
                    </div>
                    <!-- Tip 2: Be specific -->
                    <div class="tip-item mb-3">
                        <div class="d-flex">
                            <div class="tip-icon me-2 text-primary">
                                <i class="bi bi-chat-quote"></i>
                            </div>
                            <div>
                                <h6 class="fw-bold mb-1">Be specific</h6>
                                <p class="text-muted small mb-0">Include details about your goal, problem, and what you've tried.</p>
                            </div>
                        </div>
                    </div>
                    <!-- Tip 3: Add code -->
                    <div class="tip-item mb-3">
                        <div class="d-flex">
                            <div class="tip-icon me-2 text-primary">
                                <i class="bi bi-code-square"></i>
                            </div>
                            <div>
                                <h6 class="fw-bold mb-1">Add code</h6>
                                <p class="text-muted small mb-0">When appropriate, share code that demonstrates your problem.</p>
                            </div>
                        </div>
                    </div>
                    <!-- Tip 4: Add relevant tags -->
                    <div class="tip-item">
                        <div class="d-flex">
                            <div class="tip-icon me-2 text-primary">
                                <i class="bi bi-tags"></i>
                            </div>
                            <div>
                                <h6 class="fw-bold mb-1">Add relevant tags</h6>
                                <p class="text-muted small mb-0">Tags help your question reach the right experts.</p>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            
            <!-- Markdown formatting help card -->
            <div class="card formatting-help-card">
                <div class="card-header bg-transparent py-3">
                    <h5 class="mb-0 fw-bold">Markdown Formatting</h5>
                </div>
                <div class="card-body">
                    <!-- Heading example -->
                    <div class="format-example mb-2">
                        <code class="d-block mb-1"># Heading</code>
                        <div class="example-result small text-muted">Creates a heading</div>
                    </div>
                    <!-- Bold text example -->
                    <div class="format-example mb-2">
                        <code class="d-block mb-1">**bold text**</code>
                        <div class="example-result small text-muted">Creates <strong>bold text</strong></div>
                    </div>
                    <!-- Italic text example -->
                    <div class="format-example mb-2">
                        <code class="d-block mb-1">*italic text*</code>
                        <div class="example-result small text-muted">Creates <em>italic text</em></div>
                    </div>
                    <!-- Link example -->
                    <div class="format-example mb-2">
                        <code class="d-block mb-1">[link](https://example.com)</code>
                        <div class="example-result small text-muted">Creates a hyperlink</div>
                    </div>
                    <!-- Code block example -->
                    <div class="format-example">
                        <code class="d-block mb-1">```code block```</code>
                        <div class="example-result small text-muted">Creates a code block</div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Include custom CSS for questions -->
@section Styles {
    <link rel="stylesheet" href="~/css/questions.css" />
    <link rel="stylesheet" href="~/css/questions-fix.css" />
    <link rel="stylesheet" href="~/css/code-blocks.css" />
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/prismjs@1.29.0/themes/prism.min.css">
    <style>
        /* Additional styles to ensure submit button is visible */
        #submit-button {
            display: inline-block !important;
            visibility: visible !important;
            opacity: 1 !important;
            z-index: 9999 !important;
            position: relative !important;
            pointer-events: auto !important;
            cursor: pointer !important;
        }
        
        /* Fix for form layout */
        .d-grid.gap-2.d-md-flex {
            display: flex !important;
            visibility: visible !important;
            opacity: 1 !important;
        }

        /* Ensure the button container is visible */
        .justify-content-md-end {
            display: flex !important;
            visibility: visible !important;
        }
        
        /* Image preview styling */
        .image-preview {
            position: relative;
            margin-bottom: 10px;
            border-radius: 4px;
            overflow: hidden;
        }
        
        .image-preview img {
            max-width: 100%;
            max-height: 200px;
            object-fit: contain;
            border: 1px solid #ddd;
            border-radius: 4px;
        }
        
        .image-preview .remove-preview {
            position: absolute;
            top: 5px;
            right: 5px;
            background: rgba(255, 255, 255, 0.8);
            border-radius: 50%;
            width: 24px;
            height: 24px;
            display: flex;
            align-items: center;
            justify-content: center;
            cursor: pointer;
            color: #dc3545;
            border: none;
        }
    </style>
}

<!-- Include scripts for validation and Markdown editor -->
@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
    <!-- Markdown parser library -->
    <script src="https://cdn.jsdelivr.net/npm/marked/marked.min.js"></script>
    <!-- Syntax highlighting library -->
    <script src="https://cdn.jsdelivr.net/npm/prismjs@1.29.0/prism.min.js"></script>
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/prismjs@1.29.0/themes/prism.min.css">
    <!-- HTML Sanitizer script (must be loaded before markdown editor) -->
    <script src="~/js/html-sanitizer.js"></script>
    <!-- Custom Markdown editor implementation -->
    <script src="~/js/markdown-editor.js"></script>
    <!-- Enhanced file attachment handling -->
    <script src="~/js/question-attachments.js"></script>
    <!-- Form fix script -->
    <script src="~/js/form-fix.js"></script>
    
    <!-- Image preview script -->
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            const fileUpload = document.getElementById('file-upload');
            const previewContainer = document.getElementById('image-preview-container');
            
            // Handle file selection
            fileUpload.addEventListener('change', function() {
                // Clear previous previews
                previewContainer.innerHTML = '';
                
                // Process each selected file
                Array.from(this.files).forEach((file, index) => {
                    // Check if file is an image
                    if (file.type.startsWith('image/')) {
                        // Create preview element
                        const previewCol = document.createElement('div');
                        previewCol.className = 'col-md-4 col-sm-6';
                        
                        const previewDiv = document.createElement('div');
                        previewDiv.className = 'image-preview';
                        
                        // Create image element
                        const img = document.createElement('img');
                        img.alt = file.name;
                        
                        // Create remove button
                        const removeBtn = document.createElement('button');
                        removeBtn.className = 'remove-preview';
                        removeBtn.innerHTML = '<i class="bi bi-x"></i>';
                        removeBtn.type = 'button';
                        removeBtn.dataset.index = index;
                        removeBtn.addEventListener('click', function() {
                            previewCol.remove();
                            
                            // Create a new FileList without the removed file
                            // This is complex due to FileList being immutable,
                            // so we just notify the user that the file will be removed when submitting
                            // The actual removal will happen on the server side
                            const notification = document.createElement('div');
                            notification.className = 'alert alert-info mt-2';
                            notification.textContent = `${file.name} will be removed when you submit the form`;
                            previewContainer.appendChild(notification);
                            
                            setTimeout(() => {
                                notification.remove();
                            }, 3000);
                        });
                        
                        // Read the file and set the image source
                        const reader = new FileReader();
                        reader.onload = function(e) {
                            img.src = e.target.result;
                        };
                        reader.readAsDataURL(file);
                        
                        // Add elements to the DOM
                        previewDiv.appendChild(img);
                        previewDiv.appendChild(removeBtn);
                        previewCol.appendChild(previewDiv);
                        previewContainer.appendChild(previewCol);
                    }
                });
            });
        });
    </script>
}
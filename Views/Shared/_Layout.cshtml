@using Microsoft.AspNetCore.Http
@inject Microsoft.AspNetCore.Http.IHttpContextAccessor HttpContextAccessor

@{
    // Detectar si estamos en el controlador Account
    bool isAccountController = ViewContext.RouteData.Values["controller"].ToString() == "Account";
}

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>@ViewData["Title"] - DevCommunity</title>
    <script type="importmap"></script>
    <!-- Google Fonts -->
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Inter:wght@300;400;500;600;700&family=JetBrains+Mono:wght@400;500&display=swap" rel="stylesheet">
    
    <!-- Main stylesheets -->
    <link rel="stylesheet" href="~/lib/bootstrap/dist/css/bootstrap.min.css" />
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.11.1/font/bootstrap-icons.css">
    <link rel="stylesheet" href="~/css/site.css" asp-append-version="true" />
    <link rel="stylesheet" href="~/css/fast-animations.css" asp-append-version="true" />
    <link rel="stylesheet" href="~/css/questions.css" asp-append-version="true" />
    <link rel="stylesheet" href="~/css/repositories.css" asp-append-version="true" />
    <link rel="stylesheet" href="~/css/tags-modern.css" asp-append-version="true" />
    <link rel="stylesheet" href="~/css/signalr-styles.css" asp-append-version="true" />
    <link rel="stylesheet" href="~/DoAnWeb.styles.css" asp-append-version="true" />
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/prism/1.29.0/themes/prism-tomorrow.min.css" integrity="sha512-vswe+cgvic/XBoF1OcM/TeJ2FW0OofqAVdCZiEYkd6dwGXthvkSFWOoGGJgS2CW70VK5dQM5Oh+7ne47s74VTg==" crossorigin="anonymous" referrerpolicy="no-referrer" />
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/aos@2.3.4/dist/aos.css" />
    <link rel="stylesheet" href="~/css/sidebar.css" />
    <link rel="stylesheet" href="~/css/reputation-animations.css" />
    
    @await RenderSectionAsync("Styles", required: false)
</head>
<body class="d-flex flex-column">
    <header class="flex-shrink-0">
        <nav class="navbar navbar-expand-lg sticky-top">
            <div class="container-fluid d-flex justify-content-between align-items-center flex-wrap">
                <a class="navbar-brand d-flex align-items-center" asp-controller="Home" asp-action="Index" data-aos="fade-right" data-aos-duration="800">
                    <i class="bi bi-code-square me-2 text-primary"></i>
                    DevCommunity
                </a>
                <button class="navbar-toggler ms-auto" type="button" data-bs-toggle="collapse" data-bs-target="#navbarContent" aria-controls="navbarContent" aria-expanded="false" aria-label="Toggle navigation">
                    <span class="navbar-toggler-icon"></span>
                </button>
                
                <div class="collapse navbar-collapse flex-grow-1" id="navbarContent">
                    <div class="d-flex flex-grow-1 search-container mx-lg-4" data-aos="fade-down" data-aos-delay="100">
                        <div class="w-100 position-relative" id="globalSearchContainer">
                            <div class="input-group">
                                <input type="text" id="globalSearchInput" class="form-control py-2 ps-3 pe-5 border rounded-pill" 
                                       placeholder="Search questions, tags, or users..." aria-label="Search" 
                                       value="@ViewData["SearchTerm"]" autocomplete="off">
                                <button class="btn position-absolute end-0 top-0 h-100 px-3 bg-transparent border-0" type="button" id="globalSearchButton">
                                    <i class="bi bi-search text-grey-500"></i>
                                </button>
                            </div>
                            <!-- Search Results Dropdown -->
                            <div id="searchSuggestionsDropdown" class="search-suggestions-dropdown shadow-sm rounded">
                                <div class="search-results-container">
                                    <div id="searchLoadingIndicator" class="py-3 text-center d-none">
                                        <div class="spinner-border spinner-border-sm text-primary" role="status">
                                            <span class="visually-hidden">Loading...</span>
                                        </div>
                                    </div>
                                    <div class="search-results-sections">
                                        <!-- Questions Section -->
                                        <div id="questionResults" class="search-result-section">
                                            <h6 class="search-section-title"><i class="bi bi-question-circle me-2"></i>Questions</h6>
                                            <div class="search-results-list" id="questionResultsList"></div>
                                        </div>
                                        
                                        <!-- Tags Section -->
                                        <div id="tagResults" class="search-result-section">
                                            <h6 class="search-section-title"><i class="bi bi-tags me-2"></i>Tags</h6>
                                            <div class="search-results-list" id="tagResultsList"></div>
                                        </div>
                                        
                                        <!-- Users Section -->
                                        <div id="userResults" class="search-result-section">
                                            <h6 class="search-section-title"><i class="bi bi-people me-2"></i>Users</h6>
                                            <div class="search-results-list" id="userResultsList"></div>
                                        </div>
                                        
                                        <!-- Repositories Section -->
                                        <div id="repoResults" class="search-result-section">
                                            <h6 class="search-section-title"><i class="bi bi-git me-2"></i>Repositories</h6>
                                            <div class="search-results-list" id="repoResultsList"></div>
                                        </div>
                                    </div>
                                    <div id="noResultsMessage" class="py-3 text-center d-none">
                                        <p class="text-muted mb-0">No results found</p>
                                    </div>
                                    <div class="search-footer border-top">
                                        <a href="#" id="viewAllSearchResults" class="btn btn-sm btn-light w-100">
                                            View all results <i class="bi bi-arrow-right ms-1"></i>
                                        </a>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                    
                    <ul class="navbar-nav ms-auto d-flex align-items-center flex-row flex-wrap">
                        @if (User.Identity.IsAuthenticated)
                        {
                            <!-- Saved Items -->
                            <li class="nav-item mx-1" data-aos="fade-left" data-aos-delay="200">
                                <a class="nav-link d-flex align-items-center p-2" asp-controller="SavedItems" asp-action="Index">
                                    <i class="bi bi-bookmark fs-5"></i>
                                    @await Component.InvokeAsync("SavedItemsCount")
                                </a>
                            </li>
                            
                            <!-- Chat Dropdown -->
                            <li class="nav-item dropdown mx-1" data-aos="fade-left" data-aos-delay="250">
                                <a class="nav-link d-flex align-items-center p-2" href="#" id="chatDropdown" role="button" data-bs-toggle="dropdown" aria-expanded="false">
                                    <i class="bi bi-chat fs-5"></i>
                                    @if (ViewBag.UnreadChatsCount > 0)
                                    {
                                        <span class="badge rounded-pill bg-danger position-absolute top-0 start-100 translate-middle chat-badge">
                                            @ViewBag.UnreadChatsCount
                                    </span>
                                    }
                                </a>
                                
                                <div class="dropdown-menu dropdown-menu-end chat-dropdown shadow" aria-labelledby="chatDropdown" style="width: 320px;">
                                    <div class="d-flex justify-content-between align-items-center p-3 border-bottom">
                                        <h6 class="fw-bold m-0">Messages</h6>
                                        <a href="@Url.Action("Index", "Chat")" class="text-decoration-none small">See all</a>
                                    </div>
                                    
                                    <div class="chat-list">
                                        @if (ViewBag.RecentChats != null && ViewBag.RecentChats.Count > 0)
                                        {
                                            @foreach (var chat in ViewBag.RecentChats)
                                            {
                                                <a href="@Url.Action("Conversation", "Chat", new { userId = chat.OtherUserId })" class="text-decoration-none text-reset">
                                                    <div class="chat-item @(chat.HasUnreadMessages ? "unread" : "")">
                                                        <div class="d-flex">
                                                            <div class="me-2">
                                                                <img src="@(string.IsNullOrEmpty(chat.OtherUserAvatar) ? "/images/default-avatar.png" : chat.OtherUserAvatar)" 
                                                                     alt="@chat.OtherUserName" class="rounded-circle" width="40" height="40">
                                                            </div>
                                                            <div class="flex-grow-1 overflow-hidden">
                                                                <div class="d-flex justify-content-between align-items-start">
                                                                    <span class="chat-title">@chat.OtherUserName</span>
                                                                    <span class="chat-time">@chat.LastMessageTime</span>
                                                                </div>
                                                                <p class="chat-message mb-0">@chat.LastMessageText</p>
                                                            </div>
                                                            @if (chat.HasUnreadMessages)
                                                            {
                                                                <span class="position-relative">
                                                                    <span class="badge rounded-pill bg-primary position-absolute top-50 start-100 translate-middle-y">
                                                                        @chat.UnreadCount
                                                                    </span>
                                                                </span>
                                                            }
                                                        </div>
                                                    </div>
                                                </a>
                                            }
                                        }
                                        else
                                        {
                                            <div class="text-center py-4">
                                                <i class="bi bi-chat-square-text text-muted mb-2" style="font-size: 2rem;"></i>
                                                <p class="text-muted mb-0">No messages yet</p>
                                            </div>
                                        }
                                    </div>
                                    
                                    <div class="p-3 border-top">
                                        <a href="@Url.Action("New", "Chat")" class="btn btn-primary btn-sm w-100">
                                            <i class="bi bi-pencil-square me-1"></i> New Message
                                        </a>
                                    </div>
                                </div>
                            </li>

                            <!-- Notifications Dropdown -->
                            <li class="nav-item dropdown mx-1" data-aos="fade-left" data-aos-delay="300">
                                <a class="nav-link d-flex align-items-center p-2" href="#" id="notificationDropdown" role="button" data-bs-toggle="dropdown" aria-expanded="false">
                                    <i class="bi bi-bell fs-5"></i>
                                    @if (ViewBag.UnreadNotificationsCount > 0)
                                    {
                                        <span class="badge rounded-pill bg-danger position-absolute top-0 start-100 translate-middle notification-badge">
                                            @ViewBag.UnreadNotificationsCount
                                            <script>console.log('Unread notifications: @ViewBag.UnreadNotificationsCount');</script>
                                        </span>
                                    }
                                </a>
                                
                                <div class="dropdown-menu dropdown-menu-end notification-dropdown shadow" aria-labelledby="notificationDropdown" style="width: 320px;">
                                    <div class="d-flex justify-content-between align-items-center p-3 border-bottom">
                                        <h6 class="fw-bold m-0">Notifications</h6>
                                        <div>
                                            <button id="markAllReadBtn" class="btn btn-sm text-primary px-2 py-0 border-0 mark-all-read">
                                                Mark all as read
                                            </button>
                                            <a href="@Url.Action("Index", "Notifications")" class="text-decoration-none small ms-2">See all</a>
                                        </div>
                                    </div>
                                    
                                    <div class="notification-list">
                                        @if (ViewBag.RecentNotifications != null && ViewBag.RecentNotifications.Count > 0)
                                        {
                                            @foreach (var notification in ViewBag.RecentNotifications)
                                            {
                                                <a href="@notification.Url" class="notification-item @(notification.IsRead ? "" : "unread") text-decoration-none text-reset">
                                                    <div class="d-flex align-items-start">
                                                        <div class="notification-icon">
                                                            @if (notification.Type == "question_answer")
                                                            {
                                                                <i class="bi bi-chat-dots text-success"></i>
                                                            }
                                                            else if (notification.Type == "comment")
                                                            {
                                                                <i class="bi bi-chat-left text-primary"></i>
                                                            }
                                                            else if (notification.Type == "mention")
                                                            {
                                                                <i class="bi bi-at text-warning"></i>
                                                            }
                                                            else if (notification.Type == "vote")
                                                            {
                                                                <i class="bi bi-arrow-up-circle text-danger"></i>
                                                            }
                                                            else
                                                            {
                                                                <i class="bi bi-bell text-secondary"></i>
                                                            }
                                                        </div>
                                                        <div class="flex-grow-1">
                                                            <div class="notification-title">@notification.Title</div>
                                                            <p class="mb-0 small">@notification.Message</p>
                                                            <small class="notification-time">@notification.TimeAgo</small>
                                                        </div>
                                                    </div>
                                                </a>
                                            }
                                        }
                                        else
                                        {
                                            <div class="text-center py-4">
                                                <i class="bi bi-bell-slash text-muted mb-2" style="font-size: 2rem;"></i>
                                                <p class="text-muted mb-0">No notifications yet</p>
                                        </div>
                                        }
                                    </div>
                                </div>
                            </li>

                            <!-- User Profile Dropdown -->
                            <li class="nav-item dropdown mx-1" data-aos="fade-left" data-aos-delay="350">
                                <a class="nav-link d-flex align-items-center p-2" href="#" id="userDropdown" role="button" data-bs-toggle="dropdown" aria-expanded="false">
                                    <div class="position-relative">
                                        <img src="@(ViewBag.CurrentUserAvatar != null ? ViewBag.CurrentUserAvatar : "/images/default-avatar.png")" 
                                             alt="User Avatar" class="rounded-circle" width="32" height="32">
                                        <span class="position-absolute bottom-0 end-0 bg-success rounded-circle p-1 border border-white" style="width:10px;height:10px;"></span>
                                    </div>
                                </a>
                                
                                <div class="dropdown-menu dropdown-menu-end shadow" aria-labelledby="userDropdown">
                                    <div class="px-4 py-3 border-bottom">
                                        <div class="d-flex align-items-center">
                                            <img src="@(ViewBag.CurrentUserAvatar != null ? ViewBag.CurrentUserAvatar : "/images/default-avatar.png")" 
                                                 alt="User Avatar" class="rounded-circle me-3" width="40" height="40">
                                            <div>
                                                <div class="fw-semibold">@User.FindFirst("DisplayName")?.Value</div>
                                                <div class="small text-muted">@User.Identity.Name</div>
                                            </div>
                                        </div>
                                    </div>
                                    
                                    <a class="dropdown-item d-flex align-items-center py-2" asp-controller="Account" asp-action="Profile">
                                        <i class="bi bi-person me-2 text-primary"></i> Profile
                                    </a>
                                    <a class="dropdown-item d-flex align-items-center py-2" asp-controller="SavedItems" asp-action="Index">
                                        <i class="bi bi-bookmark me-2 text-primary"></i> Saved Items
                                    </a>
                                    <a class="dropdown-item d-flex align-items-center py-2" asp-controller="Account" asp-action="TestSavedItems">
                                        <i class="bi bi-plus-circle me-2 text-success"></i> Test Saved Items
                                    </a>
                                    <a class="dropdown-item d-flex align-items-center py-2" asp-controller="Account" asp-action="Settings">
                                        <i class="bi bi-gear me-2 text-primary"></i> Settings
                                    </a>
                                    
                                    @if (User.IsInRole("Admin"))
                                    {
                                        <div class="dropdown-divider"></div>
                                        <a class="dropdown-item d-flex align-items-center py-2" asp-area="Admin" asp-controller="Dashboard" asp-action="Index">
                                            <i class="bi bi-shield-lock me-2 text-primary"></i> Admin Dashboard
                                        </a>
                                    }
                                    
                                    <div class="dropdown-divider"></div>
                                    
                                    <a class="dropdown-item d-flex align-items-center py-2" href="#" onclick="document.getElementById('logoutForm').submit(); return false;">
                                        <i class="bi bi-box-arrow-right me-2 text-danger"></i> Sign Out
                                    </a>
                                    <form id="logoutForm" asp-controller="Account" asp-action="Logout" method="post" class="d-none"></form>
                                </div>
                            </li>
                        }
                        else
                        {
                            <li class="nav-item mx-1" data-aos="fade-left" data-aos-delay="200">
                                <a class="nav-link btn btn-outline-primary rounded-pill px-3 me-2" asp-controller="Account" asp-action="Login">Sign In</a>
                            </li>
                            <li class="nav-item mx-1" data-aos="fade-left" data-aos-delay="250">
                                <a class="nav-link btn btn-primary rounded-pill px-3" asp-controller="Account" asp-action="Register">Sign Up</a>
                            </li>
                        }
                    </ul>
                </div>
            </div>
        </nav>
    </header>
    
    <main class="py-4 flex-grow-1">
        <div class="container-fluid page-transition-wrapper">
            <div class="main-content">
                <div class="row g-4">
                    @if (IsSectionDefined("FullWidth") || isAccountController)
                    {
                        <!-- Contenido de ancho completo -->
                        <div class="col-12" data-aos="fade-up" data-aos-duration="500">
                            @if (TempData["SuccessMessage"] != null)
                            {
                                <div class="alert alert-success alert-dismissible fade show d-flex align-items-center" role="alert">
                                    <i class="bi bi-check-circle-fill me-2"></i>
                                    <div>@TempData["SuccessMessage"]</div>
                                    <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
                                </div>
                            }

                            @if (TempData["ErrorMessage"] != null)
                            {
                                <div class="alert alert-danger alert-dismissible fade show d-flex align-items-center" role="alert">
                                    <i class="bi bi-exclamation-triangle-fill me-2"></i>
                                    <div>@TempData["ErrorMessage"]</div>
                                    <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
                                </div>
                            }

                            @if (TempData["WarningMessage"] != null)
                            {
                                <div class="alert alert-warning alert-dismissible fade show d-flex align-items-center" role="alert">
                                    <i class="bi bi-exclamation-circle-fill me-2"></i>
                                    <div>@TempData["WarningMessage"]</div>
                                    <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
                                </div>
                            }

                            @if (IsSectionDefined("FullWidth"))
                            {
                                @RenderSection("FullWidth", required: false)
                            }
                            else
                            {
                                @RenderBody()
                            }
                        </div>
                    }
                    else
                    {
                        <!-- Sidebar -->
                        <div class="col-lg-2 col-md-3 d-none d-md-block sidebar-container">
                            <div class="sidebar" data-aos="fade-right" data-aos-duration="500">
                                <ul class="nav flex-column">
                                    <li class="nav-item">
                                        <a class="nav-link @(ViewContext.RouteData.Values["controller"].ToString() == "Home" && ViewContext.RouteData.Values["action"].ToString() == "Index" ? "active" : "")" 
                                           asp-controller="Home" asp-action="Index">
                                            <i class="bi bi-house me-2"></i> Home
                                        </a>
                                    </li>
                                    <li class="nav-item">
                                        <a class="nav-link @(ViewContext.RouteData.Values["controller"].ToString() == "Questions" ? "active" : "")" 
                                           asp-controller="Questions" asp-action="Index">
                                            <i class="bi bi-question-circle me-2"></i> Questions
                                        </a>
                                    </li>
                                    <li class="nav-item">
                                        <a class="nav-link @(ViewContext.RouteData.Values["controller"].ToString() == "Tags" ? "active" : "")" 
                                           asp-controller="Tags" asp-action="Index">
                                            <i class="bi bi-tags me-2"></i> Tags
                                        </a>
                                    </li>
                                    <li class="nav-item">
                                        <a class="nav-link @(ViewContext.RouteData.Values["controller"].ToString() == "Users" ? "active" : "")" 
                                           asp-controller="Users" asp-action="Index">
                                            <i class="bi bi-people me-2"></i> Users
                                        </a>
                                    </li>
                                    <li class="nav-item">
                                        <a class="nav-link @(ViewContext.RouteData.Values["controller"].ToString() == "Repository" ? "active" : "")" 
                                           asp-controller="Repository" asp-action="Index">
                                            <i class="bi bi-git me-2"></i> Repositories
                                        </a>
                                    </li>
                                    <li class="nav-item">
                                        <a class="nav-link @(ViewContext.RouteData.Values["controller"].ToString() == "Chat" ? "active" : "")" 
                                           asp-controller="Chat" asp-action="Index">
                                            <i class="bi bi-chat-dots me-2"></i> Chat
                                        </a>
                                    </li>
                                </ul>
                                
                                <hr class="my-3">
                                
                        @if (User.Identity.IsAuthenticated)
                        {
                                    <div class="bg-light rounded-3 p-3 mb-3">
                                        <h6 class="fw-bold">Your Tags</h6>
                                        @if (ViewBag.UserPreferredTags != null && ViewBag.UserPreferredTags.Count > 0)
                                        {
                                            <div class="d-flex flex-wrap gap-1 mt-2">
                                                @foreach (var tag in ViewBag.UserPreferredTags)
                                                {
                                                    <a href="@Url.Action("Tagged", "Questions", new { tagName = tag.Name })" 
                                                       class="badge text-bg-primary text-decoration-none">
                                                        @tag.Name
                                                    </a>
                                                }
                                            </div>
                                        }
                                        else
                                        {
                                            <div class="small text-muted">
                                                <p class="mb-1">You haven't selected any tags yet.</p>
                                                <a asp-controller="TagPreferences" asp-action="Index" class="text-decoration-none">
                                                    <small>Customize your tags ?</small>
                                                </a>
                                            </div>
                                        }
                                    </div>
                                }
                            </div>
                        </div>
                        
                        <!-- Main Content -->
                        <div class="@(ViewBag.HideRightSidebar == true ? "col-lg-10 col-md-9" : "col-lg-8 col-md-6") px-4 px-md-3" data-aos="fade-up" data-aos-duration="800">
                            @if (TempData["SuccessMessage"] != null)
                            {
                                <div class="alert alert-success alert-dismissible fade show d-flex align-items-center" role="alert">
                                    <i class="bi bi-check-circle-fill me-2"></i>
                                    <div>@TempData["SuccessMessage"]</div>
                                    <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
                                </div>
                            }

                            @if (TempData["ErrorMessage"] != null)
                            {
                                <div class="alert alert-danger alert-dismissible fade show d-flex align-items-center" role="alert">
                                    <i class="bi bi-exclamation-triangle-fill me-2"></i>
                                    <div>@TempData["ErrorMessage"]</div>
                                    <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
                                </div>
                            }

                            @if (TempData["WarningMessage"] != null)
                            {
                                <div class="alert alert-warning alert-dismissible fade show d-flex align-items-center" role="alert">
                                    <i class="bi bi-exclamation-circle-fill me-2"></i>
                                    <div>@TempData["WarningMessage"]</div>
                                    <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
                                </div>
                            }
                        
                            @RenderBody()
                        </div>
                        
                       
                    }
                </div>
            </div>
        </div>
                    </main>

    <footer class="footer py-4 border-top flex-shrink-0" style="position: relative; z-index: 10;">
        <div class="container-fluid">
            <div class="row align-items-center">
                <div class="col-md-6 text-center text-md-start mb-3 mb-md-0">
                    <div class="d-flex align-items-center">
                        <i class="bi bi-code-square me-2 text-primary"></i>
                        <span class="fw-semibold">DevCommunity</span>
                    </div>
                    <div class="text-muted small mt-1">
                        &copy; @DateTime.Now.Year - All rights reserved
                    </div>
                </div>
                <div class="col-md-6">
                    <ul class="nav justify-content-center justify-content-md-end">
                        <li class="nav-item">
                            <a href="#" class="nav-link px-2 text-muted">About</a>
                        </li>
                        <li class="nav-item">
                            <a href="#" class="nav-link px-2 text-muted">Contact</a>
                        </li>
                        <li class="nav-item">
                            <a href="#" class="nav-link px-2 text-muted">Terms</a>
                        </li>
                        <li class="nav-item">
                            <a href="#" class="nav-link px-2 text-muted">Privacy</a>
                        </li>
                    </ul>
        </div>
    </div>
        </div>
    </footer>

    <!-- Toast container for real-time notifications -->
    <div id="toast-container" class="toast-container position-fixed bottom-0 end-0 p-3" style="z-index: 1100;">
        <!-- Toasts will be dynamically added here -->
    </div>

    <!-- Audio element for notification sounds -->
    <audio id="notification-sound" preload="auto" style="display: none;">
        <source src="/audio/notification.mp3" type="audio/mpeg">
        <source src="/audio/notification.ogg" type="audio/ogg">
    </audio>

    <!-- Mobile Navigation for small screens -->
    <div class="mobile-nav-bottom d-md-none">
        <a href="@Url.Action("Index", "Home")" class="mobile-nav-item">
            <div class="mobile-nav-icon"><i class="bi bi-house"></i></div>
            <div class="mobile-nav-text">Home</div>
        </a>
        <a href="@Url.Action("Index", "Questions")" class="mobile-nav-item">
            <div class="mobile-nav-icon"><i class="bi bi-question-circle"></i></div>
            <div class="mobile-nav-text">Questions</div>
        </a>
        <a href="@Url.Action("Index", "Tags")" class="mobile-nav-item">
            <div class="mobile-nav-icon"><i class="bi bi-tags"></i></div>
            <div class="mobile-nav-text">Tags</div>
        </a>
        <a href="@Url.Action("Index", "Users")" class="mobile-nav-item">
            <div class="mobile-nav-icon"><i class="bi bi-people"></i></div>
            <div class="mobile-nav-text">Users</div>
        </a>
        @if (User.Identity.IsAuthenticated)
        {
            <a href="@Url.Action("Profile", "Account")" class="mobile-nav-item">
                <div class="mobile-nav-icon"><i class="bi bi-person"></i></div>
                <div class="mobile-nav-text">Profile</div>
            </a>
        }
        else
        {
            <a href="@Url.Action("Login", "Account")" class="mobile-nav-item">
                <div class="mobile-nav-icon"><i class="bi bi-box-arrow-in-right"></i></div>
                <div class="mobile-nav-text">Sign In</div>
            </a>
        }
    </div>

    <script src="~/lib/jquery/dist/jquery.min.js"></script>
    <script src="~/lib/bootstrap/dist/js/bootstrap.bundle.min.js"></script>
    <script src="~/js/site.js" asp-append-version="true"></script>
    
    <!-- Real-time features scripts -->
    <script src="~/js/signalr-loader.js" asp-append-version="true"></script>
    <script src="~/js/signalr-connection-check.js" asp-append-version="true"></script>
    <script src="~/js/activity-handler.js" asp-append-version="true"></script>
    <script src="~/js/presence-handler.js" asp-append-version="true"></script>
    <script src="~/js/notification-service-fixed.js" asp-append-version="true"></script>
    <script src="~/js/view-counter-fixed.js" asp-append-version="true"></script>
    <script src="~/js/reputation-sync.js" asp-append-version="true"></script>
    
    <script src="https://cdnjs.cloudflare.com/ajax/libs/prism/1.29.0/prism.min.js" crossorigin="anonymous" referrerpolicy="no-referrer"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/prism/1.29.0/components/prism-csharp.min.js" crossorigin="anonymous" referrerpolicy="no-referrer"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/prism/1.29.0/components/prism-javascript.min.js" crossorigin="anonymous" referrerpolicy="no-referrer"></script>
    <script src="https://cdn.jsdelivr.net/npm/aos@2.3.4/dist/aos.js"></script>
    
    <script>
        // Khởi tạo animation nhanh hơn
        document.addEventListener('DOMContentLoaded', function() {
            // Tối ưu AOS
            AOS.init({
                once: true,
                duration: 400, // Giảm xuống còn 400ms
                easing: 'ease-out', // Sử dụng easing đơn giản và nhanh hơn
                offset: 20, // Giảm offset để trigger animation sớm hơn
                delay: 0, // Bỏ delay mặc định
                throttleDelay: 0, // Giảm throttle delay
                disable: window.innerWidth < 768 // Tắt hiệu ứng trên thiết bị di động để cải thiện hiệu suất
            });
            
            // Hiển thị nội dung ngay lập tức trên mobile
            if (window.innerWidth < 768) {
                document.querySelector('.main-content').classList.add('loaded');
            } else {
                // Hiệu ứng load nhanh hơn trên desktop
                setTimeout(() => {
                    document.querySelector('.main-content').classList.add('loaded');
                }, 30); // Chỉ chờ 30ms
            }
            
            // Optimize navbar shadow
            const navbar = document.querySelector('.navbar');
            function updateNavbarShadow() {
                navbar.style.boxShadow = window.scrollY > 10 ? 
                    '0 4px 20px rgba(0, 0, 0, 0.08)' : 
                    '0 2px 15px rgba(0, 0, 0, 0.05)';
            }
            
            // Hiệu năng tốt hơn với passive listener
            window.addEventListener('scroll', updateNavbarShadow, { passive: true });
            updateNavbarShadow(); // Gọi ngay lập tức
            
            // Tối ưu hiệu ứng chuyển trang - nhanh và nhẹ nhàng hơn
            document.querySelectorAll('a').forEach(anchor => {
                // Bỏ qua các liên kết đặc biệt
                if (anchor.hasAttribute('data-bs-toggle') || 
                    anchor.hostname !== window.location.hostname ||
                    anchor.getAttribute('href')?.startsWith('#') ||
                    anchor.getAttribute('href')?.includes('javascript:') ||
                    anchor.getAttribute('target') === '_blank' ||
                    anchor.classList.contains('dropdown-toggle') ||
                    (anchor.classList.contains('nav-link') && anchor.hasAttribute('data-bs-toggle'))) {
                    return;
                }
                
                anchor.addEventListener('click', function(e) {
                    e.preventDefault();
                    const targetHref = anchor.getAttribute('href');
                    
                    // Nếu là trang chủ, chuyển ngay lập tức
                    if (targetHref === '/' || targetHref === '/Home' || targetHref === '/Home/Index') {
                        window.location.href = targetHref;
                        return;
                    }
                    
                    // Hiệu ứng mờ nhẹ, không dịch chuyển để tránh giật
                    const mainContent = document.querySelector('.main-content');
                    mainContent.style.opacity = '0.9';
                    mainContent.style.transition = 'opacity 100ms ease';
                    
                    // Chỉ chờ 100ms
                    setTimeout(() => {
                        window.location.href = targetHref;
                    }, 100);
                });
            });
            
            // Xử lý sticky sidebar khi cuộn
            const handleStickyElements = () => {
                const navbar = document.querySelector('.navbar');
                const navbarHeight = navbar ? navbar.offsetHeight : 70;
                const footer = document.querySelector('.footer');
                const footerTop = footer ? footer.getBoundingClientRect().top : 0;
                const windowHeight = window.innerHeight;
                
                // Đặt lại top cho sidebar để đảm bảo nó nằm dưới navbar
                document.querySelectorAll('.sidebar, .right-sidebar').forEach(sidebar => {
                    // Đảm bảo sidebar không bị che khuất bởi navbar
                    sidebar.style.top = `${navbarHeight + 6}px`;
                    
                    // Kiểm tra nếu footer đến gần viewport
                    if (footer && footerTop < windowHeight) {
                        // Tính khoảng cách từ bottom của viewport đến top của footer
                        const distanceToFooter = footerTop - windowHeight;
                        
                        // Điều chỉnh max-height để không bị che khuất bởi footer
                        sidebar.style.maxHeight = `calc(100vh - ${navbarHeight + 16}px - ${Math.abs(distanceToFooter)}px)`;
                    } else {
                        // Đặt max-height bình thường khi không gần footer
                        sidebar.style.maxHeight = `calc(100vh - ${navbarHeight + 16}px)`;
                    }
                    
                    // Thêm padding-bottom để không bị che khuất bởi footer trên màn hình ngắn
                    if (window.innerHeight < 700) {
                        sidebar.style.paddingBottom = '60px';
                    }
                });
            };
            
            // Gọi hàm xử lý sticky elements khi trang load và resize
            handleStickyElements();
            window.addEventListener('scroll', handleStickyElements, { passive: true });
            window.addEventListener('resize', handleStickyElements, { passive: true });
            
            // Responsive handling for mobile devices
            const handleMobileResize = () => {
                const windowWidth = window.innerWidth;
                
                const contentColumns = document.querySelectorAll('.col-lg-8, .col-lg-10, .col-12');
                
                if (windowWidth < 768) {
                    contentColumns.forEach(col => {
                        col.classList.add('mt-3');
                        col.style.width = '100%';
                        col.style.maxWidth = '100%';
                        col.style.overflowX = 'hidden';
                    });
                    
                    document.querySelectorAll('.container-fluid').forEach(container => {
                        container.style.paddingLeft = '10px';
                        container.style.paddingRight = '10px';
                    });
                    
                    const mainContent = document.querySelector('.main-content');
                    if (mainContent) {
                        mainContent.style.width = '100%';
                        mainContent.style.overflowX = 'hidden';
                    }
                } else {
                    contentColumns.forEach(col => {
                        col.classList.remove('mt-3');
                        col.style.width = '';
                        col.style.maxWidth = '';
                        col.style.overflowX = '';
                    });
                    
                    document.querySelectorAll('.container-fluid').forEach(container => {
                        container.style.paddingLeft = '';
                        container.style.paddingRight = '';
                    });
                    
                    const mainContent = document.querySelector('.main-content');
                    if (mainContent) {
                        mainContent.style.width = '';
                        mainContent.style.overflowX = '';
                    }
                }
                
                if (windowWidth < 768) {
                    document.querySelectorAll('pre, table, .card').forEach(el => {
                        el.style.maxWidth = '100%';
                        if (el.tagName === 'TABLE') {
                            el.style.display = 'block';
                            el.style.overflowX = 'auto';
                        }
                    });
                } else {
                    document.querySelectorAll('pre, table, .card').forEach(el => {
                        el.style.maxWidth = '';
                        if (el.tagName === 'TABLE') {
                            el.style.display = '';
                            el.style.overflowX = '';
                        }
                    });
                }
            };
            
            handleMobileResize();
            
            let mobileResizeTimer;
            window.addEventListener('resize', () => {
                clearTimeout(mobileResizeTimer);
                mobileResizeTimer = setTimeout(handleMobileResize, 100);
            });
        });
    </script>
    
    @await RenderSectionAsync("Scripts", required: false)
    
    <!-- Fix for click issues -->
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            // Debugging - log all clicks
            document.addEventListener('click', function(e) {
                console.log('Clicked element:', e.target);
                
                // Find repository card if we're inside one
                const repoCard = findParentWithClass(e.target, 'repository-card');
                if (repoCard) {
                    console.log('Inside repository card:', repoCard);
                    
                    // Find the Details link in the card
                    const detailsLink = repoCard.querySelector('.repository-details-link') || 
                                        repoCard.querySelector('.repository-title a');
                    
                    if (detailsLink && !isClickingLink(e.target)) {
                        console.log('Redirecting to:', detailsLink.href);
                        // If we clicked the card but not a link or button, navigate to details
                        window.location.href = detailsLink.href;
                    }
                }
            });
            
            // Add hover effect to repository cards for better UX
            const repoCards = document.querySelectorAll('.repository-card');
            repoCards.forEach(card => {
                card.style.cursor = 'pointer';
            });
            
            // Helper function to check if clicking a link or button
            function isClickingLink(element) {
                if (!element) return false;
                
                // Check if the element or any parent is a link or button
                let current = element;
                while (current !== document.body && current !== null) {
                    const tagName = current.tagName.toLowerCase();
                    if (tagName === 'a' || tagName === 'button' || 
                        current.classList.contains('btn') || 
                        current.hasAttribute('role') && current.getAttribute('role') === 'button') {
                        return true;
                    }
                    current = current.parentElement;
                }
                return false;
            }
            
            // Helper function to find parent with specific class
            function findParentWithClass(element, className) {
                while (element && !element.classList.contains(className)) {
                    element = element.parentElement;
                }
                return element;
            }
        });
    </script>
</body>
</html>




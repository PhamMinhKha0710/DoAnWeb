@using Microsoft.AspNetCore.Http
@inject Microsoft.AspNetCore.Http.IHttpContextAccessor HttpContextAccessor

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>@ViewData["Title"] - DevCommunity</title>
    <script type="importmap"></script>
    <link rel="stylesheet" href="~/lib/bootstrap/dist/css/bootstrap.min.css" />
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.11.1/font/bootstrap-icons.css">
    <link rel="stylesheet" href="~/css/site.css" asp-append-version="true" />
    <link rel="stylesheet" href="~/css/questions.css" asp-append-version="true" />
    <link rel="stylesheet" href="~/css/repositories.css" asp-append-version="true" />
    <link rel="stylesheet" href="~/css/tags.css" asp-append-version="true" />
    <link rel="stylesheet" href="~/css/signalr-styles.css" asp-append-version="true" />
    <link rel="stylesheet" href="~/DoAnWeb.styles.css" asp-append-version="true" />
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/prism/1.29.0/themes/prism-tomorrow.min.css" integrity="sha512-vswe+cgvic/XBoF1OcM/TeJ2FW0OofqAVdCZiEYkd6dwGXthvkSFWOoGGJgS2CW70VK5dQM5Oh+7ne47s74VTg==" crossorigin="anonymous" referrerpolicy="no-referrer" />
    <style>
        :root {
            --primary-color: #0d6efd;
            --hover-color: #0b5ed7;
            --border-color: #e3e6e8;
            --code-bg-color: #2d2d2d;
            --inline-code-bg-color: #f5f5f5;
            --inline-code-color: #d63384;
        }

        body {
            min-height: 100vh;
            display: flex;
            flex-direction: column;
        }

        .navbar-brand {
            font-weight: bold;
            color: var(--primary-color) !important;
        }

        .search-container {
            width: 100%;
            max-width: 400px;
        }

        .sidebar {
            border-right: 1px solid var(--border-color);
            padding-right: 15px;
            min-height: calc(100vh - 180px);
        }

        .right-sidebar {
            border-left: 1px solid var(--border-color);
            padding-left: 15px;
        }

        .nav-item .active, .nav-link.active {
            font-weight: bold;
            color: var(--primary-color) !important;
            background-color: rgba(13, 110, 253, 0.1);
            border-radius: 5px;
        }

        .sidebar .nav-link {
            padding: 8px 16px;
            margin: 4px 0;
            border-radius: 5px;
            transition: all 0.3s ease;
        }

        .sidebar .nav-link:hover {
            color: var(--hover-color) !important;
            background-color: rgba(13, 110, 253, 0.1);
        }

        .btn-primary {
            background-color: var(--primary-color);
            border-color: var(--primary-color);
        }

        .btn-primary:hover {
            background-color: var(--hover-color);
            border-color: var(--hover-color);
        }

        .btn-outline-primary {
            color: var(--primary-color);
            border-color: var(--primary-color);
        }

        .btn-outline-primary:hover {
            background-color: var(--primary-color);
            border-color: var(--primary-color);
        }

        .footer {
            margin-top: auto;
            background-color: #f8f9fa;
        }

        main {
            flex: 1;
            padding: 20px 0;
        }

        .dropdown-item:active {
            background-color: var(--primary-color);
        }

        .navbar {
            padding: 0.5rem 1rem;
            box-shadow: 0 1px 3px rgba(0,0,0,0.1);
        }

        /* Notification Styles */
        .notification-dropdown {
            padding: 0;
        }

        .notification-item {
            padding: 10px 15px;
            border-bottom: 1px solid var(--border-color);
            transition: background-color 0.3s;
        }

        .notification-item:hover {
            background-color: rgba(13, 110, 253, 0.05);
        }

        .notification-item.unread {
            background-color: rgba(13, 110, 253, 0.1);
        }

        .notification-item .notification-title {
            font-weight: 600;
            margin-bottom: 3px;
        }

        .notification-item .notification-time {
            font-size: 0.8rem;
            color: #6c757d;
        }

        .notification-badge {
            font-size: 0.6rem;
            transform: translate(-50%, -50%) !important;
        }

        .mark-all-read {
            color: var(--primary-color);
            font-size: 0.8rem;
        }

        .mark-all-read:hover {
            color: var(--hover-color);
        }

        #notificationDropdown::after {
            display: none;
        }

        .notification-icon {
            width: 20px;
            text-align: center;
            margin-right: 10px;
        }

        /* Save Items Styles */
        .saved-items-count {
            font-size: 0.7rem;
            padding: 0.25rem 0.5rem;
        }

        .save-button {
            border: none;
            background: none;
            padding: 0;
            color: #6c757d;
            transition: color 0.3s ease;
        }

        .save-button:hover {
            color: var(--primary-color);
        }

        .save-button.saved {
            color: var(--primary-color);
        }

        .save-button i {
            font-size: 1.2rem;
        }

        /* Chat & Notification Styles */
        .chat-dropdown,
        .notification-dropdown {
            padding: 0;
            box-shadow: 0 0.5rem 1rem rgba(0, 0, 0, 0.15);
        }

        .chat-list,
        .notification-list {
            max-height: 300px;
            overflow-y: auto;
        }

        .chat-item,
        .notification-item {
            padding: 10px 15px;
            border-bottom: 1px solid var(--border-color);
            transition: background-color 0.3s;
        }

        .chat-item:hover,
        .notification-item:hover {
            background-color: rgba(13, 110, 253, 0.05);
            cursor: pointer;
        }

        .chat-item.unread,
        .notification-item.unread {
            background-color: rgba(13, 110, 253, 0.1);
        }

        .chat-item .chat-title,
        .notification-item .notification-title {
            font-weight: 600;
            margin-bottom: 3px;
            color: var(--bs-body-color);
        }

        .chat-item .chat-message,
        .notification-item .notification-message {
            font-size: 0.875rem;
            color: var(--bs-secondary);
            margin-bottom: 3px;
            white-space: nowrap;
            overflow: hidden;
            text-overflow: ellipsis;
        }

        .chat-item .chat-time,
        .notification-item .notification-time {
            font-size: 0.75rem;
            color: var(--bs-secondary);
        }

        .chat-badge,
        .notification-badge {
            font-size: 0.6rem;
            transform: translate(-50%, -50%) !important;
        }

        .mark-all-read:hover {
            text-decoration: underline !important;
        }

        #chatDropdown::after,
        #notificationDropdown::after {
            display: none;
        }

        .chat-avatar {
            width: 40px;
            height: 40px;
            border-radius: 50%;
            margin-right: 10px;
        }

        /* Code Block Styling */
        pre {
            background-color: var(--code-bg-color);
            border-radius: 6px;
            margin: 1.5rem 0;
            padding: 1rem;
            overflow: auto;
            position: relative;
            padding-top: 2.5rem;
            max-height: 500px;
        }
        
        pre code {
            color: #f8f8f2;
            font-family: 'Consolas', 'Monaco', 'Andale Mono', monospace;
            font-size: 0.9rem;
            line-height: 1.5;
            text-shadow: none;
            white-space: pre;
            word-break: normal;
            word-spacing: normal;
            tab-size: 4;
        }
        
        /* Inline code styling */
        p code, li code, td code {
            background-color: var(--inline-code-bg-color);
            color: var(--inline-code-color);
            font-family: 'Consolas', 'Monaco', 'Andale Mono', monospace;
            font-size: 0.9em;
            padding: 0.2em 0.4em;
            border-radius: 3px;
            white-space: nowrap;
        }
        
        /* Language indicator on code blocks */
        pre[data-language]::before {
            content: attr(data-language);
            position: absolute;
            top: 0;
            right: 0;
            background-color: #3a3a3a;
            color: #eee;
            padding: 0.2rem 0.7rem;
            font-size: 0.75rem;
            text-transform: uppercase;
            border-bottom-left-radius: 6px;
            border-top-right-radius: 6px;
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
            letter-spacing: 0.5px;
            box-shadow: 0 1px 1px rgba(0,0,0,0.2);
        }
        
        /* Cải thiện code blocks cho các ngôn ngữ cụ thể */
        pre[data-language="html"]::before,
        pre[data-language="markup"]::before,
        pre[data-language="xml"]::before {
            background-color: #e34c26;
        }
        
        pre[data-language="css"]::before {
            background-color: #264de4;
        }
        
        pre[data-language="javascript"]::before,
        pre[data-language="js"]::before {
            background-color: #f7df1e;
            color: #000;
        }
        
        pre[data-language="typescript"]::before,
        pre[data-language="ts"]::before {
            background-color: #007acc;
        }
        
        pre[data-language="csharp"]::before,
        pre[data-language="cs"]::before {
            background-color: #9B4F96;
        }
        
        pre[data-language="python"]::before,
        pre[data-language="py"]::before {
            background-color: #306998;
        }
        
        pre[data-language="java"]::before {
            background-color: #ED8B00;
            color: #000;
        }
        
        pre[data-language="php"]::before {
            background-color: #8892BF;
        }
        
        pre[data-language="sql"]::before {
            background-color: #ffda44;
            color: #000;
        }
        
        pre[data-language="cpp"]::before,
        pre[data-language="c"]::before {
            background-color: #00599C;
        }
        
        pre[data-language="ruby"]::before {
            background-color: #CC342D;
        }
        
        pre[data-language="go"]::before {
            background-color: #00ADD8;
        }
        
        pre[data-language="rust"]::before {
            background-color: #DEA584;
        }
        
        pre[data-language="json"]::before {
            background-color: #000;
            color: #fff;
        }
        
        pre[data-language="bash"]::before,
        pre[data-language="shell"]::before {
            background-color: #3e474a;
        }
        
        pre[data-language="markdown"]::before,
        pre[data-language="md"]::before {
            background-color: #755838;
        }
        
        pre[data-language="yaml"]::before {
            background-color: #cb171e;
        }
        
        pre[data-language="plaintext"]::before {
            background-color: #808080;
        }
        
        /* Blockquote styling for Markdown */
        blockquote {
            border-left: 4px solid var(--primary-color);
            margin: 1.5rem 0;
            padding: 0.5rem 1rem;
            background-color: rgba(13, 110, 253, 0.05);
        }
        
        blockquote p:last-child {
            margin-bottom: 0;
        }
    </style>
    @await RenderSectionAsync("Styles", required: false)
    @RenderSection("Stylesheets", required: false)
</head>
<body>
    <header>
        <nav class="navbar navbar-expand-sm navbar-toggleable-sm navbar-light bg-white border-bottom box-shadow mb-3">
            <div class="container-fluid">
                <a class="navbar-brand" asp-area="" asp-controller="Home" asp-action="Index">
                    <i class="bi bi-code-square"></i> DevCommunity
                </a>
                <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target=".navbar-collapse" aria-controls="navbarSupportedContent"
                        aria-expanded="false" aria-label="Toggle navigation">
                    <span class="navbar-toggler-icon"></span>
                </button>
                <div class="navbar-collapse collapse d-sm-inline-flex justify-content-between">
                    <ul class="navbar-nav">
                        <li class="nav-item">
                            <a class="nav-link text-dark" asp-area="" asp-controller="Repository" asp-action="Index">Repositories</a>
                        </li>
                    </ul>
                    
                    <div class="search-container mx-2">
                        <form class="d-flex" asp-controller="Home" asp-action="Search" method="get">
                            <div class="input-group">
                                <input class="form-control" type="search" name="q" placeholder="Search..." aria-label="Search">
                                <button class="btn btn-outline-primary" type="submit"><i class="bi bi-search"></i></button>
                            </div>
                        </form>
                    </div>
                    
                    <ul class="navbar-nav ms-auto">
                        @if (User.Identity?.IsAuthenticated == true)
                        {
                            <!-- Chat Dropdown -->
                            <li class="nav-item dropdown me-2">
                                <a class="nav-link position-relative" href="#" id="chatDropdown" role="button" data-bs-toggle="dropdown" aria-expanded="false">
                                    <i class="bi bi-chat-dots"></i>
                                    <span class="position-absolute top-0 start-100 translate-middle badge rounded-pill bg-danger chat-badge" style="display: none;">
                                        0
                                        <span class="visually-hidden">unread messages</span>
                                    </span>
                                </a>
                                <div class="dropdown-menu dropdown-menu-end chat-dropdown" aria-labelledby="chatDropdown" style="width: 300px; max-height: 400px; overflow-y: auto;">
                                    <div class="d-flex justify-content-between align-items-center px-3 py-2 border-bottom">
                                        <h6 class="mb-0">Messages</h6>
                                        <a class="btn btn-link btn-sm text-decoration-none" asp-controller="Chat" asp-action="Index">View All</a>
                                    </div>
                                    <div class="chat-list">
                                        <!-- Chat items will be dynamically added here -->
                                    </div>
                                </div>
                            </li>

                            <!-- Notifications Dropdown -->
                            <li class="nav-item dropdown me-3">
                                <a class="nav-link position-relative" href="#" id="notificationDropdown" role="button" data-bs-toggle="dropdown" aria-expanded="false">
                                    <i class="bi bi-bell"></i>
                                    <span class="position-absolute top-0 start-100 translate-middle badge rounded-pill bg-danger notification-badge" id="notification-badge" style="display: none;">
                                        0
                                        <span class="visually-hidden">unread notifications</span>
                                    </span>
                                </a>
                                <div class="dropdown-menu dropdown-menu-end notification-dropdown" aria-labelledby="notificationDropdown" style="width: 350px; max-height: 500px; overflow-y: auto;">
                                    <div class="d-flex justify-content-between align-items-center px-3 py-2 border-bottom">
                                        <h6 class="mb-0">Notifications</h6>
                                        <div>
                                            <button class="btn btn-link btn-sm text-decoration-none mark-all-read me-2">Mark all as read</button>
                                            <a class="btn btn-link btn-sm text-decoration-none" asp-controller="Notifications" asp-action="Index">View All</a>
                                        </div>
                                    </div>
                                    <div class="notification-list">
                                        <!-- Notifications will be dynamically added here -->
                                        <div class="p-3 text-center text-muted">
                                            <i class="bi bi-bell mb-2 fs-4"></i>
                                            <p>Loading notifications...</p>
                                        </div>
                                    </div>
                                </div>
                            </li>

                            <li class="nav-item dropdown">
                                <a class="nav-link dropdown-toggle" href="#" id="navbarDropdown" role="button" data-bs-toggle="dropdown" aria-expanded="false">
                                    <i class="bi bi-person-circle"></i>
                                </a>
                                <ul class="dropdown-menu dropdown-menu-end" aria-labelledby="navbarDropdown">
                                    <li><a class="dropdown-item" asp-controller="Account" asp-action="Profile">Profile</a></li>
                                    <li>
                                        <form asp-controller="Account" asp-action="Logout" method="post" id="logoutForm">
                                            @Html.AntiForgeryToken()
                                            <a class="dropdown-item" href="javascript:void(0);" onclick="document.getElementById('logoutForm').submit();">Logout</a>
                                        </form>
                                    </li>
                                </ul>
                            </li>
                        }
                        else
                        {
                            <li class="nav-item">
                                <a class="nav-link text-dark" asp-controller="Account" asp-action="Login">Login</a>
                            </li>
                            <li class="nav-item">
                                <a class="btn btn-primary" asp-controller="Account" asp-action="Register">Sign up</a>
                            </li>
                        }
                    </ul>
                </div>
            </div>
        </nav>
    </header>
    
    <!-- Notification Area -->
    <div class="toast-container position-fixed top-0 end-0 p-3" style="z-index: 1500;">
        <div id="notificationToast" class="toast" role="alert" aria-live="assertive" aria-atomic="true">
            <div class="toast-header">
                <i id="notificationIcon" class="bi me-2"></i>
                <strong id="notificationTitle" class="me-auto">Notification</strong>
                <small id="notificationTime">just now</small>
                <button type="button" class="btn-close" data-bs-dismiss="toast" aria-label="Close"></button>
            </div>
            <div id="notificationBody" class="toast-body">
            </div>
        </div>
    </div>

    <div class="container">
        <div class="row">
            @{
                var currentController = ViewContext.RouteData.Values["Controller"].ToString();
                var showSidebar = currentController == "Home" || currentController == "Questions" || currentController == "Repository" || currentController == "Tags" || currentController == "Users";
            }
            
            @if (showSidebar)
            {
                <div class="col-md-2 sidebar">
                    <nav class="nav flex-column">
                        <a class="nav-link text-dark d-flex align-items-center @(currentController == "Home" ? "active" : "")" asp-area="" asp-controller="Home" asp-action="Index">
                            <i class="bi bi-house-door me-2"></i> Home
                        </a>
                        <a class="nav-link text-dark d-flex align-items-center @(currentController == "Questions" ? "active" : "")" asp-area="" asp-controller="Questions" asp-action="Index">
                            <i class="bi bi-question-circle me-2"></i> Question
                        </a>
                        <a class="nav-link text-dark d-flex align-items-center @(currentController == "Tags" ? "active" : "")" asp-area="" asp-controller="Tags" asp-action="Index">
                            <i class="bi bi-tags me-2"></i> Tag
                        </a>
                        <a class="nav-link text-dark d-flex align-items-center @(currentController == "Users" ? "active" : "")" asp-area="" asp-controller="Users" asp-action="Index">
                            <i class="bi bi-people me-2"></i> User
                        </a>
                         <a class="nav-link text-dark d-flex align-items-center @(currentController == "Repository" ? "active" : "")" asp-area="" asp-controller="Repository" asp-action="Index">
                            <i class="bi-display"></i>  Repositories
                        </a>
                        <a class="nav-link text-dark d-flex align-items-center @(currentController == "Account" && ViewContext.RouteData.Values["Action"].ToString() == "Saves" ? "active" : "")" asp-area="" asp-controller="Account" asp-action="Saves">
                            <i class="bi bi-bookmark me-2"></i> Save
                            <span class="badge bg-primary rounded-pill ms-auto saved-items-count" style="display: none;">0</span>
                        </a>
                    </nav>
                </div>
                <div class="col-md-10">
                    <main role="main" class="pb-3">
                        @if (User.Identity.IsAuthenticated)
                        {
                            var securityUpgrade = Context.Session.GetString("SecurityUpgrade");
                            var lastLogin = Context.Session.GetString("LastLogin");
                            
                            if (!string.IsNullOrEmpty(securityUpgrade) && securityUpgrade == "PBKDF2" && 
                                !string.IsNullOrEmpty(lastLogin) && DateTime.TryParse(lastLogin, out var loginDate) && 
                                (DateTime.Now - loginDate).TotalMinutes < 5)
                            {
                                <div class="alert alert-success alert-dismissible fade show" role="alert">
                                    <i class="bi bi-shield-check me-2"></i>
                                    <strong>Bảo mật tài khoản của bạn đã được nâng cấp!</strong> Chúng tôi đã tự động cập nhật phương thức bảo vệ mật khẩu của bạn sang một chuẩn an toàn hơn.
                                    <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
                                </div>
                                
                                Context.Session.Remove("SecurityUpgrade");
                                Context.Session.Remove("LastLogin");
                            }
                        }
                        
                        @RenderBody()
                    </main>
                </div>
            }
            else
            {
                <div class="col-md-12">
                    <main role="main" class="pb-3">
                        @RenderBody()
                    </main>
                </div>
            }
        </div>
    </div>

    <footer class="border-top footer text-muted">
        <div class="container">
            &copy; 2025 - DevCommunity - <a asp-area="" asp-controller="Home" asp-action="Privacy">Privacy</a>
        </div>
    </footer>
    <script src="~/lib/jquery/dist/jquery.min.js"></script>
    <script src="~/lib/bootstrap/dist/js/bootstrap.bundle.min.js"></script>
    <script src="~/lib/microsoft/signalr/dist/browser/signalr.min.js"></script>
    <script src="~/js/site.js" asp-append-version="true"></script>
    <script src="~/js/saved-items.js" asp-append-version="true"></script>
    <script src="~/js/signalr-client.js" asp-append-version="true"></script>
    <script src="~/js/comment-form.js" asp-append-version="true"></script>
    <script src="~/js/notification-handler.js" asp-append-version="true"></script>
    <!-- Syntax Highlighting with Prism.js -->
    <script src="https://cdnjs.cloudflare.com/ajax/libs/prism/1.29.0/prism.min.js" integrity="sha512-7Z9D9tQ3nBL/YDR65JnEF4iHyRUMikEZgR6V3SJvNiTQs3kdJTbPuUF+cbd5y/RCQ8JJ8CXZsSl+6hWdLQXqYw==" crossorigin="anonymous" referrerpolicy="no-referrer"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/prism/1.29.0/plugins/autoloader/prism-autoloader.min.js" integrity="sha512-SkmBfuA2hqjzEVpmnMt/LINrjop3GKWqsuLSSB3e7iBmYK7JuWw4ldmmxwD9mdm2IRTTi0OxSAfEGvgEi0i2Kw==" crossorigin="anonymous" referrerpolicy="no-referrer"></script>
    <!-- Initialize Prism for dynamically added code blocks -->
    <script>
        // Re-initialize Prism highlighting after content changes (e.g., after AJAX loads)
        function refreshPrism() {
            if (typeof Prism !== 'undefined') {
                Prism.highlightAll();
            }
        }
        
        // Cấu hình tải tự động các ngôn ngữ
        Prism.plugins.autoloader.languages_path = 'https://cdnjs.cloudflare.com/ajax/libs/prism/1.29.0/components/';
        
        // Hàm này sẽ xác định ngôn ngữ thông qua class của thẻ code
        function detectAndHighlightCode() {
            document.querySelectorAll('pre code').forEach((block) => {
                // Nếu không có class language nào, gán mặc định là text
                if (!block.className.includes('language-')) {
                    block.className += ' language-plaintext';
                }
                
                // Trích xuất tên ngôn ngữ từ class
                const langClass = block.className.match(/language-(\w+)/);
                if (langClass && langClass[1]) {
                    // Xác định ngôn ngữ từ class
                    const language = langClass[1].toLowerCase();
                    
                    // Thêm data-language cho pre tag nếu chưa có thuộc tính này
                    const preTag = block.parentElement;
                    if (preTag && preTag.tagName === 'PRE' && !preTag.hasAttribute('data-language')) {
                        preTag.setAttribute('data-language', language);
                    }
                }
            });
            
            // Chạy Prism
            Prism.highlightAll();
        }
        
        // Theo dõi thay đổi DOM để xử lý các code blocks mới được thêm vào
        function setupMutationObserver() {
            // Khởi tạo MutationObserver để theo dõi thay đổi DOM
            const observer = new MutationObserver(function(mutations) {
                let needsRefresh = false;
                
                mutations.forEach(function(mutation) {
                    // Kiểm tra nếu có node mới được thêm vào
                    if (mutation.addedNodes.length) {
                        for (let i = 0; i < mutation.addedNodes.length; i++) {
                            const node = mutation.addedNodes[i];
                            // Kiểm tra node có phải là element và có chứa pre code không
                            if (node.nodeType === 1 && (
                                node.tagName === 'PRE' || 
                                node.querySelector('pre') || 
                                node.querySelector('code')
                            )) {
                                needsRefresh = true;
                                break;
                            }
                        }
                    }
                });
                
                // Nếu cần, refresh Prism
                if (needsRefresh) {
                    detectAndHighlightCode();
                }
            });
            
            // Bắt đầu theo dõi thay đổi trên toàn bộ body
            observer.observe(document.body, {
                childList: true,
                subtree: true
            });
        }
        
        // Run after page load
        $(document).ready(function() {
            detectAndHighlightCode();
            setupMutationObserver();
        });
    </script>
    @await RenderSectionAsync("Scripts", required: false)
</body>
</html>
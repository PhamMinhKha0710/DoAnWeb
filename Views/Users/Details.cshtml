@model DoAnWeb.Models.User

@{
    ViewData["Title"] = $"User: {Model.DisplayName}";
}

<div class="container mt-4">
    <div class="row">
        <div class="col-md-12">
            <div class="card mb-4">
                <div class="card-body">
                    <div class="d-flex">
                        <div class="me-4">
                            <img src="@(string.IsNullOrEmpty(Model.AvatarUrl) ? "/images/default-avatar.png" : Model.AvatarUrl)" 
                                 class="rounded-circle" width="128" height="128" alt="@Model.DisplayName">
                        </div>
                        <div>
                            <h1 class="mb-1">@Model.DisplayName</h1>
                            <p class="text-muted mb-2">@Model.Username</p>
                            <div class="d-flex align-items-center mb-3">
                                <span class="badge bg-primary me-2">1 reputation</span>
                                <span class="badge bg-secondary me-2">Member since @(Model.CreatedDate?.ToString("MMM yyyy") ?? "unknown")</span>
                            </div>
                            @if (!string.IsNullOrEmpty(Model.Bio))
                            {
                                <p>@Model.Bio</p>
                            }
                        </div>
                    </div>
                </div>
            </div>

            <div class="row">
                <div class="col-md-4">
                    <div class="card mb-4">
                        <div class="card-header">
                            <h5 class="mb-0">Stats</h5>
                        </div>
                        <div class="card-body">
                            <div class="row">
                                <div class="col-6 mb-3">
                                    <div class="fw-bold">@Model.Questions.Count</div>
                                    <div class="text-muted">Questions</div>
                                </div>
                                <div class="col-6 mb-3">
                                    <div class="fw-bold">@Model.Answers.Count</div>
                                    <div class="text-muted">Answers</div>
                                </div>
                                <div class="col-6 mb-3">
                                    <div class="fw-bold">@Model.Repositories.Count</div>
                                    <div class="text-muted">Repositories</div>
                                </div>
                                <div class="col-6 mb-3">
                                    <div class="fw-bold">@Model.Comments.Count</div>
                                    <div class="text-muted">Comments</div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>

                <div class="col-md-8">
                    <div class="card mb-4">
                        <div class="card-header">
                            <h5 class="mb-0">Recent Activity</h5>
                        </div>
                        <div class="card-body">
                            @if (Model.Questions.Any() || Model.Answers.Any())
                            {
                                <div class="list-group">
                                    @foreach (var question in Model.Questions.OrderByDescending(q => q.CreatedDate).Take(5))
                                    {
                                        <a href="@Url.Action("Details", "Questions", new { id = question.QuestionId })" class="list-group-item list-group-item-action">
                                            <div class="d-flex w-100 justify-content-between">
                                                <h5 class="mb-1">@question.Title</h5>
                                                <small>@(question.CreatedDate != default ? question.CreatedDate.ToString("MMM dd, yyyy") : "unknown")</small>
                                            </div>
                                            <p class="mb-1 text-truncate">@(question.Body?.Substring(0, Math.Min(question.Body.Length, 100)) ?? "")...</p>
                                            <small>Asked a question</small>
                                        </a>
                                    }
                                    @foreach (var answer in Model.Answers.OrderByDescending(a => a.CreatedDate).Take(5))
                                    {
                                        <a href="@Url.Action("Details", "Questions", new { id = answer.QuestionId })" class="list-group-item list-group-item-action">
                                            <div class="d-flex w-100 justify-content-between">
                                                <h5 class="mb-1">@answer.Question?.Title</h5>
                                                <small>@(answer.CreatedDate != default ? answer.CreatedDate.ToString("MMM dd, yyyy") : "unknown")</small>
                                            </div>
                                            <p class="mb-1 text-truncate">@(answer.Body?.Substring(0, Math.Min(answer.Body.Length, 100)) ?? "")...</p>
                                            <small>Posted an answer</small>
                                        </a>
                                    }
                                </div>
                            }
                            else
                            {
                                <p class="text-muted">No recent activity found.</p>
                            }
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
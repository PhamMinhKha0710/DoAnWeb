@model DoAnWeb.ViewModels.RepositoryDetailsViewModel
@using DoAnWeb.GitIntegration
@using DoAnWeb.GitIntegration.Models

@{
    ViewData["Title"] = Model.Repository?.RepositoryName ?? Model.RepositoryName ?? "Repository Details";
}

<div class="container mt-4">
    @if (!string.IsNullOrEmpty(TempData["ErrorMessage"]?.ToString()))
    {
        <div class="alert alert-danger alert-dismissible fade show" role="alert">
            @TempData["ErrorMessage"]
            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
        </div>
    }
    
    @if (!string.IsNullOrEmpty(TempData["SuccessMessage"]?.ToString()))
    {
        <div class="alert alert-success alert-dismissible fade show" role="alert">
            @TempData["SuccessMessage"]
            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
        </div>
    }
    
    @if (!string.IsNullOrEmpty(TempData["WarningMessage"]?.ToString()))
    {
        <div class="alert alert-warning alert-dismissible fade show" role="alert">
            @TempData["WarningMessage"]
            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
        </div>
    }
    
    @if (!string.IsNullOrEmpty(TempData["InfoMessage"]?.ToString()))
    {
        <div class="alert alert-info alert-dismissible fade show" role="alert">
            @TempData["InfoMessage"]
            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
        </div>
    }
    
    @if (TempData["GiteaConnectionIssue"] != null && (bool)TempData["GiteaConnectionIssue"] == true)
    {
        <div class="alert alert-warning alert-dismissible fade show" role="alert">
            <i class="bi bi-exclamation-triangle-fill me-2"></i>
            <strong>Gitea Connection Issue:</strong> Cannot connect to the Gitea server. Some repository features like file browsing and commit history may be limited.
            <a asp-action="TestGiteaConnection" class="btn btn-sm btn-warning ms-3">Test Connection</a>
            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
        </div>
    }
    
    @if (Model.ShowOwnershipFix)
    {
        <div class="alert alert-warning alert-dismissible fade show" role="alert">
            <i class="bi bi-exclamation-triangle-fill me-2"></i>
            <strong>Cảnh báo:</strong> Repository này không có chủ sở hữu hoặc bạn không được gán là chủ sở hữu.
            <a href="/Repository/FixOwnership" class="btn btn-sm btn-warning ms-3">Sửa quyền sở hữu</a>
            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
        </div>
    }

    @if (ViewBag.NeedsGiteaLink == true)
    {
        <div class="alert alert-warning d-flex align-items-center mb-4">
            <div class="me-3 fs-3">
                <i class="bi bi-exclamation-triangle-fill"></i>
            </div>
            <div class="flex-grow-1">
                <h5 class="mb-1">Gitea Account Required</h5>
                <p class="mb-2">You need to link your DevCommunity account with Gitea to access all repository features.</p>
                <a asp-action="LinkGitea" asp-route-owner="@Model.GiteaUsername" asp-route-repo="@Model.RepositoryName" 
                   class="btn btn-warning btn-sm">
                    <i class="bi bi-git me-1"></i> Link Gitea Account
                </a>
            </div>
        </div>
    }

    <div class="d-flex align-items-center justify-content-between mb-4">
        <div class="d-flex align-items-center">
            <a asp-action="Index" class="btn btn-outline-secondary me-3">
                <i class="bi bi-arrow-left"></i> Back to Repositories
            </a>
            <h1 class="mb-0">@(Model.Repository?.RepositoryName ?? Model.RepositoryName)</h1>
            @if (Model.Repository != null && Model.Repository.Visibility == "Private")
            {
                <span class="badge bg-danger ms-2">Private</span>
            }
            else
            {
                <span class="badge bg-success ms-2">Public</span>
            }
        </div>
        
        <div class="btn-group" role="group">
            <a asp-action="Branches" asp-route-owner="@Model.Owner" asp-route-repo="@Model.RepositoryName" 
               class="btn btn-outline-secondary">
                <i class="bi bi-diagram-3"></i> Branches
            </a>
            <a asp-action="CommitHistory" asp-route-owner="@Model.Owner" asp-route-repo="@Model.RepositoryName" asp-route-branch="@(Model.Branch ?? (Model.Repository?.DefaultBranch ?? "main"))" 
               class="btn btn-outline-secondary">
                <i class="bi bi-clock-history"></i> Commits
            </a>
            
            @if (Model.IsGiteaRepository)
            {
                <a href="http://localhost:3000/@Model.Owner/@Model.RepositoryName" 
                   target="_blank" class="btn btn-primary">
                    <i class="bi bi-box-arrow-up-right"></i> Open in Gitea
                </a>
                <a asp-action="SyncRepository" asp-route-id="@Model.Repository?.RepositoryId" 
                   class="btn btn-outline-primary">
                    <i class="bi bi-arrow-repeat"></i> Sync from Gitea
                </a>
            }
        </div>
    </div>

    <div class="row">
        <div class="col-md-8">
            <!-- Repository file browser -->
            <div class="card mb-4">
                <div class="card-header bg-light d-flex justify-content-between align-items-center">
                    <div>
                        <div class="d-flex align-items-center">
                            <h5 class="mb-0">
                                <i class="bi bi-folder"></i> Files
                            </h5>
                            
                            <div class="dropdown ms-3">
                                <button class="btn btn-sm btn-outline-secondary dropdown-toggle" type="button" 
                                        id="branchDropdown" data-bs-toggle="dropdown" aria-expanded="false">
                                    <i class="bi bi-git"></i> @(Model.Branch ?? (Model.Repository?.DefaultBranch ?? "main"))
                                </button>
                                <ul class="dropdown-menu" aria-labelledby="branchDropdown">
                                    @{
                                        var branches = Model.AvailableBranches != null ? Model.AvailableBranches : new List<DoAnWeb.GitIntegration.Models.GiteaBranch>();
                                    }
                                    @foreach (var branch in branches)
                                    {
                                        <li>
                                            <a class="dropdown-item @(branch.Name == (Model.Branch ?? (Model.Repository?.DefaultBranch ?? "main")) ? "active" : "")" 
                                               asp-action="DetailsByName" asp-route-owner="@Model.Owner" asp-route-repo="@Model.RepositoryName" asp-route-branch="@branch.Name" asp-route-path="@Model.CurrentPath">
                                                @branch.Name
                                            </a>
                                        </li>
                                    }
                                </ul>
                            </div>
                            
                            @if (!string.IsNullOrEmpty(Model.CurrentPath))
                            {
                                <nav aria-label="breadcrumb" class="ms-3">
                                    <ol class="breadcrumb mb-0">
                                        <li class="breadcrumb-item">
                                            <a asp-action="DetailsByName" asp-route-owner="@Model.Owner" asp-route-repo="@Model.RepositoryName" asp-route-branch="@Model.Branch">
                                                root
                                            </a>
                                        </li>
                                        
                                        @{
                                            var pathParts = Model.CurrentPath.Split('/');
                                            var currentPath = "";
                                            
                                            for (int i = 0; i < pathParts.Length; i++)
                                            {
                                                currentPath += (i > 0 ? "/" : "") + pathParts[i];
                                                var isLast = i == pathParts.Length - 1;
                                                
                                                if (isLast)
                                                {
                                                    <li class="breadcrumb-item active">@pathParts[i]</li>
                                                }
                                                else
                                                {
                                                    <li class="breadcrumb-item">
                                                        <a asp-action="DetailsByName" asp-route-owner="@Model.Owner" asp-route-repo="@Model.RepositoryName" asp-route-branch="@Model.Branch" asp-route-path="@currentPath">
                                                            @pathParts[i]
                                                        </a>
                                                    </li>
                                                }
                                            }
                                        }
                                    </ol>
                                </nav>
                            }
                        </div>
                    </div>
                    
                    <div>
                        <div class="btn-group">
                            @if (Model.IsOwner)
                            {
                                <a asp-action="UploadFile" asp-route-owner="@Model.Owner" asp-route-repo="@Model.RepositoryName" asp-route-branch="@(Model.Branch ?? (Model.Repository?.DefaultBranch ?? "main"))" asp-route-path="@Model.CurrentPath" 
                                   class="btn btn-sm btn-outline-primary">
                                    <i class="bi bi-file-earmark-plus"></i> Upload File
                                </a>
                                <a asp-action="UploadFolder" asp-route-owner="@Model.Owner" asp-route-repo="@Model.RepositoryName" asp-route-branch="@(Model.Branch ?? (Model.Repository?.DefaultBranch ?? "main"))" asp-route-path="@Model.CurrentPath" 
                                   class="btn btn-sm btn-outline-primary">
                                    <i class="bi bi-folder-plus"></i> Upload Folder
                                </a>
                            }
                            else
                            {
                                <a asp-action="CreateBranch" asp-route-owner="@Model.Owner" asp-route-repo="@Model.RepositoryName" asp-route-sourceBranch="@(Model.Branch ?? (Model.Repository?.DefaultBranch ?? "main"))"
                                   class="btn btn-sm btn-outline-primary">
                                    <i class="bi bi-git"></i> Fork Repository
                                </a>
                            }
                        </div>
                    </div>
                </div>
                
                <div class="card-body p-0">
                    @if (Model.Files == null || !Model.Files.Any())
                    {
                        <div class="p-4 text-center">
                            <i class="bi bi-folder2-open text-muted" style="font-size: 3rem;"></i>
                            <p class="mt-3">This repository is empty. Start by uploading files.</p>
                            @if (Model.IsOwner)
                            {
                                <div class="mt-3">
                                    <a asp-action="UploadFile" asp-route-owner="@Model.Owner" asp-route-repo="@Model.RepositoryName" asp-route-branch="@(Model.Branch ?? (Model.Repository?.DefaultBranch ?? "main"))" 
                                       class="btn btn-primary">
                                        <i class="bi bi-file-earmark-plus"></i> Upload File
                                    </a>
                                </div>
                            }
                        </div>
                    }
                    else
                    {
                        <div class="table-responsive">
                            <table class="table table-hover mb-0">
                                <thead class="table-light">
                                    <tr>
                                        <th>Name</th>
                                        <th>Size</th>
                                        <th>Last Commit</th>
                                        <th>Updated</th>
                                        @if (Model.IsOwner)
                                        {
                                            <th>Actions</th>
                                        }
                                    </tr>
                                </thead>
                                <tbody>
                                    @if (!string.IsNullOrEmpty(Model.CurrentPath) && !string.IsNullOrEmpty(Model.ParentPath))
                                    {
                                        <tr>
                                            <td colspan="4">
                                                <a asp-action="DetailsByName" asp-route-owner="@Model.Owner" asp-route-repo="@Model.RepositoryName" asp-route-branch="@Model.Branch" asp-route-path="@Model.ParentPath" 
                                                   class="text-decoration-none">
                                                    <i class="bi bi-arrow-up-circle text-primary"></i>
                                                    <span class="ms-2">..</span>
                                                </a>
                                            </td>
                                        </tr>
                                    }
                                    
                                    @foreach (var item in Model.Files.Where(f => f.Type == "dir").OrderBy(f => f.Name))
                                    {
                                        <tr>
                                            <td>
                                                <a asp-action="DetailsByName" asp-route-owner="@Model.Owner" asp-route-repo="@Model.RepositoryName" asp-route-branch="@Model.Branch" asp-route-path="@item.Path" 
                                                   class="text-decoration-none">
                                                    <i class="bi bi-folder text-primary me-2"></i>
                                                    @item.Name
                                                </a>
                                            </td>
                                            <td>-</td>
                                            <td class="text-muted small">
                                                @(item.CommitMessage != null ? item.CommitMessage.Split('\n')[0] : "-")
                                            </td>
                                            <td class="text-muted small">
                                                @(item.CommitDate != null ? item.CommitDate.Value.ToLocalTime().ToString("yyyy-MM-dd HH:mm") : "-")
                                            </td>
                                            @if (Model.IsOwner)
                                            {
                                                <td>
                                                    <div class="btn-group btn-group-sm">
                                                        <a asp-action="EditFile" asp-route-owner="@Model.Owner" asp-route-repo="@Model.RepositoryName" asp-route-branch="@Model.Branch" asp-route-path="@item.Path" 
                                                            class="btn btn-outline-primary">
                                                            <i class="bi bi-pencil"></i>
                                                        </a>
                                                        <a href="#" class="btn btn-outline-danger" 
                                                            onclick="confirmDelete('@item.Path', '@item.Name', false)">
                                                            <i class="bi bi-trash"></i>
                                                        </a>
                                                    </div>
                                                </td>
                                            }
                                        </tr>
                                    }
                                    
                                    @foreach (var item in Model.Files.Where(f => f.Type != "dir").OrderBy(f => f.Name))
                                    {
                                        <tr>
                                            <td>
                                                <a asp-action="FileContent" asp-route-owner="@Model.Owner" asp-route-repo="@Model.RepositoryName" asp-route-branch="@Model.Branch" asp-route-path="@item.Path" class="text-decoration-none">
                                                    @{
                                                        string icon = "bi-file-earmark";
                                                        
                                                        var extension = System.IO.Path.GetExtension(item.Name).ToLowerInvariant();
                                                        if (extension == ".cs" || extension == ".js" || extension == ".ts" || 
                                                            extension == ".html" || extension == ".css" || extension == ".json")
                                                        {
                                                            icon = "bi-file-earmark-code";
                                                        }
                                                        else if (extension == ".md" || extension == ".txt")
                                                        {
                                                            icon = "bi-file-earmark-text";
                                                        }
                                                        else if (extension == ".jpg" || extension == ".png" || 
                                                                 extension == ".gif" || extension == ".svg")
                                                        {
                                                            icon = "bi-file-earmark-image";
                                                        }
                                                        else if (extension == ".pdf")
                                                        {
                                                            icon = "bi-file-earmark-pdf";
                                                        }
                                                        else if (extension == ".zip" || extension == ".rar")
                                                        {
                                                            icon = "bi-file-earmark-zip";
                                                        }
                                                    }
                                                    
                                                    <i class="bi @icon me-2"></i>
                                                    @item.Name
                                                </a>
                                            </td>
                                            <td>
                                                @if (item.Size > 0)
                                                {
                                                    @FormatFileSize(item.Size)
                                                }
                                                else
                                                {
                                                    <span>-</span>
                                                }
                                            </td>
                                            <td class="text-muted small">
                                                @(item.CommitMessage != null ? item.CommitMessage.Split('\n')[0] : "-")
                                            </td>
                                            <td class="text-muted small">
                                                @(item.CommitDate != null ? item.CommitDate.Value.ToLocalTime().ToString("yyyy-MM-dd HH:mm") : "-")
                                            </td>
                                            @if (Model.IsOwner)
                                            {
                                                <td>
                                                    <div class="btn-group btn-group-sm">
                                                        <a asp-action="EditFile" asp-route-owner="@Model.Owner" asp-route-repo="@Model.RepositoryName" asp-route-branch="@Model.Branch" asp-route-path="@item.Path" 
                                                            class="btn btn-outline-primary">
                                                            <i class="bi bi-pencil"></i>
                                                        </a>
                                                        <a href="#" class="btn btn-outline-danger" 
                                                            onclick="confirmDelete('@item.Path', '@item.Name', false)">
                                                            <i class="bi bi-trash"></i>
                                                        </a>
                                                    </div>
                                                </td>
                                            }
                                        </tr>
                                    }
                                </tbody>
                            </table>
                        </div>
                    }
                </div>
            </div>

            <div class="card mb-4" id="readme-section" style="display: @(string.IsNullOrEmpty(Model.ReadmeContent) ? "none" : "block")">
                <div class="card-header bg-light">
                    <h5 class="mb-0"><i class="bi bi-book"></i> README</h5>
                </div>
                <div class="card-body markdown-content" id="readme-content">
                    @Html.Raw(Model.ReadmeContent)
                </div>
            </div>
        </div>

        <div class="col-md-4">
            <div class="card mb-4">
                <div class="card-header">
                    <h5 class="mb-0">
                        <i class="bi bi-person"></i> Owner
                    </h5>
                </div>
                <div class="card-body">
                    <div class="d-flex align-items-center">
                        @if (Model.Repository?.Owner != null && !string.IsNullOrEmpty(Model.Repository.Owner.AvatarUrl))
                        {
                            <img src="@Model.Repository.Owner.AvatarUrl" class="rounded-circle me-3" style="width: 64px; height: 64px;" alt="Owner Avatar">
                        }
                        else
                        {
                            <div class="rounded-circle me-3 bg-secondary d-flex align-items-center justify-content-center text-white" 
                                 style="width: 64px; height: 64px;">
                                <i class="bi bi-person fs-3"></i>
                            </div>
                        }
                        <div>
                            <h5 class="mb-0">@(Model.Repository?.Owner?.DisplayName ?? Model.GiteaUsername)</h5>
                            <p class="text-muted mb-0">@(Model.Repository?.Owner?.DisplayName ?? Model.GiteaUsername)</p>
                        </div>
                    </div>
                </div>
            </div>

            <div class="card mb-4">
                <div class="card-header">
                    <h5 class="mb-0">
                        <i class="bi bi-info-circle"></i> Repository Information
                    </h5>
                </div>
                <div class="card-body">
                    <p class="card-text">
                        @if (Model.Repository == null || string.IsNullOrEmpty(Model.Repository.Description))
                        {
                            <span class="text-muted">No description provided</span>
                        }
                        else
                        {
                            @Model.Repository.Description
                        }
                    </p>
                    
                    <div class="d-flex justify-content-between align-items-center border-top pt-3 mt-3">
                        <div>
                            <span class="text-muted">Default Branch:</span> 
                            <span class="badge bg-secondary">@(Model.Repository?.DefaultBranch ?? "main")</span>
                        </div>
                        <div>
                            <span class="text-muted">Created:</span> 
                            @(Model.Repository?.CreatedDate != null ? ((DateTime)Model.Repository.CreatedDate).ToShortDateString() : "N/A")
                        </div>
                        <div>
                            <span class="text-muted">Last Updated:</span> 
                            @(Model.Repository?.UpdatedDate != null ? ((DateTime)Model.Repository.UpdatedDate).ToShortDateString() : "N/A")
                        </div>
                    </div>
                </div>
            </div>

            @if (Model.IsGiteaRepository)
            {
                <div class="card mb-4">
                    <div class="card-header">
                        <h5 class="mb-0">
                            <i class="bi bi-git"></i> Clone Repository
                        </h5>
                    </div>
                    <div class="card-body">
                        <div class="input-group">
                            <span class="input-group-text">HTTPS</span>
                            <input type="text" class="form-control" id="cloneUrl" 
                                   value="http://localhost:3000/@Model.GiteaUsername/@Model.RepositoryName@(".git")" readonly>
                            <button class="btn btn-outline-secondary" type="button" onclick="copyToClipboard('cloneUrl')">
                                <i class="bi bi-clipboard"></i>
                            </button>
                        </div>
                        <div class="mt-3 small">
                            <code class="d-block bg-light p-2 rounded">git clone http://localhost:3000/@Model.GiteaUsername/@Model.RepositoryName@(".git")</code>
                        </div>
                    </div>
                </div>
                
                <div class="card">
                    <div class="card-header">
                        <h5 class="mb-0">
                            <i class="bi bi-link-45deg"></i> Quick Links
                        </h5>
                    </div>
                    <div class="card-body">
                        <div class="list-group">
                            <a href="http://localhost:3000/@Model.GiteaUsername/@Model.RepositoryName/issues" 
                               target="_blank" class="list-group-item list-group-item-action d-flex align-items-center">
                                <i class="bi bi-exclamation-circle me-2"></i> Issues
                            </a>
                            <a href="http://localhost:3000/@Model.GiteaUsername/@Model.RepositoryName/pulls" 
                               target="_blank" class="list-group-item list-group-item-action d-flex align-items-center">
                                <i class="bi bi-git me-2"></i> Pull Requests
                            </a>
                            <a href="http://localhost:3000/@Model.GiteaUsername/@Model.RepositoryName/wiki" 
                               target="_blank" class="list-group-item list-group-item-action d-flex align-items-center">
                                <i class="bi bi-book me-2"></i> Wiki
                            </a>
                            <a href="http://localhost:3000/@Model.GiteaUsername/@Model.RepositoryName/settings" 
                               target="_blank" class="list-group-item list-group-item-action d-flex align-items-center">
                                <i class="bi bi-gear me-2"></i> Settings
                            </a>
                        </div>
                    </div>
                </div>
            }
            else
            {
                <div class="card">
                    <div class="card-header">
                        <h5 class="mb-0">
                            <i class="bi bi-info-circle"></i> About Repositories
                        </h5>
                    </div>
                    <div class="card-body">
                        <p>Repositories in DevCommunity are powered by Gitea, an open-source Git service.</p>
                        <ul class="list-unstyled">
                            <li><i class="bi bi-check-circle-fill text-success me-2"></i> Create and store code</li>
                            <li><i class="bi bi-check-circle-fill text-success me-2"></i> Track changes with Git</li>
                            <li><i class="bi bi-check-circle-fill text-success me-2"></i> Collaborate with others</li>
                            <li><i class="bi bi-check-circle-fill text-success me-2"></i> Manage issues and pull requests</li>
                        </ul>
                        <a href="https://docs.gitea.io/en-us/" target="_blank" class="btn btn-outline-primary btn-sm mt-2">
                            Learn more about Gitea
                        </a>
                    </div>
                </div>
            }
        </div>
    </div>
</div>

<!-- Delete Confirmation Modal -->
<div class="modal fade" id="deleteModal" tabindex="-1" aria-labelledby="deleteModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="deleteModalLabel">Confirm Delete</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <p>Are you sure you want to delete <span id="deleteItemName"></span>?</p>
                <p class="text-danger">This action cannot be undone.</p>
                
                <form id="deleteForm" method="post">
                    <input type="hidden" id="deletePath" name="path" />
                    <input type="hidden" id="deleteType" name="isDirectory" />
                    <input type="hidden" name="owner" value="@Model.Owner" />
                    <input type="hidden" name="repo" value="@Model.RepositoryName" />
                    <input type="hidden" name="branch" value="@(Model.Branch ?? (Model.Repository?.DefaultBranch ?? "main"))" />
                </form>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                <button type="button" class="btn btn-danger" onclick="document.getElementById('deleteForm').submit();">Delete</button>
            </div>
        </div>
    </div>
</div>

@if (!string.IsNullOrEmpty(Model.GitCloneUrl))
{
    <!-- Clone Repository Modal -->
    <div class="modal fade" id="cloneModal" tabindex="-1" aria-labelledby="cloneModalLabel" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="cloneModalLabel">Clone Repository</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <div class="mb-3">
                        <label class="form-label">HTTPS Clone URL</label>
                        <div class="input-group">
                            <input type="text" class="form-control" id="cloneUrl" value="@Model.GitCloneUrl" readonly>
                            <button class="btn btn-outline-secondary" type="button" onclick="copyToClipboard('cloneUrl')">
                                <i class="bi bi-clipboard"></i>
                            </button>
                        </div>
                        <small class="text-muted">Use this URL with git clone command</small>
                    </div>
                    
                    <div class="alert alert-info">
                        <i class="bi bi-info-circle-fill me-2"></i>
                        <strong>Clone with Git:</strong>
                        <code>git clone @Model.GitCloneUrl</code>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                </div>
            </div>
        </div>
    </div>
}

@section Scripts {
    <script>
        function copyToClipboard(elementId) {
            const element = document.getElementById(elementId);
            element.select();
            document.execCommand('copy');
            
            // Show a temporary tooltip
            const originalText = element.nextElementSibling.innerHTML;
            element.nextElementSibling.innerHTML = '<i class="bi bi-check"></i> Copied!';
            setTimeout(() => {
                element.nextElementSibling.innerHTML = originalText;
            }, 2000);
        }
        
        function confirmDelete(path, name, isDirectory) {
            document.getElementById('deleteItemName').innerText = name;
            document.getElementById('deletePath').value = path;
            document.getElementById('deleteType').value = isDirectory;
            document.getElementById('deleteForm').action = '@Url.Action("DeleteFile", new { owner = Model.Owner, repo = Model.RepositoryName, branch = Model.Branch ?? (Model.Repository?.DefaultBranch ?? "main") })';
            
            var modal = new bootstrap.Modal(document.getElementById('deleteModal'));
            modal.show();
            
            return false;
        }
    </script>
}

@functions {
    public string FormatFileSize(long bytes)
    {
        string[] sizes = { "B", "KB", "MB", "GB", "TB" };
        int order = 0;
        double size = bytes;
        
        while (size >= 1024 && order < sizes.Length - 1)
        {
            order++;
            size = size / 1024;
        }
        
        return $"{size:0.##} {sizes[order]}";
    }
}